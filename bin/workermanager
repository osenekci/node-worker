#!/usr/bin/env node

const EnvUtils = require('node-utils-lc').EnvUtils;
const Config = require('node-libs-lc').Config;
const Logger = require('node-libs-lc').Logger;
const LockManager = require('node-libs-lc').LockManager;
const WorkerManager = require('../lib/WorkerManager');

const lock = new LockManager(false);

Config.create(EnvUtils.getEnvVar('CONFIG_DIR'),
    EnvUtils.ENV_TYPES).then((config) => {
      const workerConf = config.get('worker');
      const logger = new Logger(workerConf.logger);
      const wm = new WorkerManager(workerConf.workers, logger, config);
      const intervalId = setInterval(() => {
        if (lock.isLocked()) {
          return;
        }
        lock.setLock(true);
        wm.tick().then(() => {
          lock.setLock(false);
        }).catch(() => {
          lock.setLock(false);
        });
      }, workerConf.period * 1000);
      process.on('SIGINT', function() {
        clearInterval(intervalId);
        wm.terminate().then(() => {
          logger.info('Received SIGINT. Exiting.');
        });
      });
    });
